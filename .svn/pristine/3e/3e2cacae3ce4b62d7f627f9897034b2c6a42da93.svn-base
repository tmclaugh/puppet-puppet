# $Id$
#
# XXX: The following must cirrently be manually created on the FS and
# permissions must be set correctlt.
# - /data/hdfs/data - hdfs:hadoop - 700
# - /data/mapred/local - mapred:hadoop - 755
#
# Ideally we should have something like:
# - /hadoop/<DS>/hdfs/data
# - /hadoop/<DS>/mapred/local
#
# See following for the manual setup required.  FOLLOW THIS!
# https://ccp.cloudera.com/display/CDHDOC/CDH3+Deployment+on+a+Cluster
#
# XXX: This needs to be executed for hadoop startup script to use right config.
# update-alternatives --install /etc/hadoop-0.20/conf hadoop-0.20-conf /usr/lib/hadoop-0.20/conf 100
# - Startup script does not use correct config directory...
# - See note in Hadoop base
#
# XXX: SSH keys need for cluster setup.
# http://archive.cloudera.com/cdh/3/hadoop/cluster_setup.html#Hadoop+Startup
#
#The only dependency outside the hadoop module is java in hadoop::package
class hadoop::datanode {
  require hadoop::base
  package { "hadoop-0.20-datanode":
    ensure => "latest",
  }
  service { "hadoop-0.20-datanode-svc" :
    name => "hadoop-0.20-datanode",
    ensure => true,
    enable => true,
    hasstatus => true
  }
}

class hadoop::tasktracker {
  require hadoop::base
  package { "hadoop-0.20-tasktracker":
    ensure => "latest",
  }
  service { "hadoop-0.20-tasktracker-svc" :
    name => "hadoop-0.20-tasktracker",
    ensure => true,
    enable => true,
    hasstatus => true
  }
}

class hadoop::namenode {
  require hadoop::base    
  package { "hadoop-0.20-namenode":
    ensure => "latest",
  }
  service { "hadoop-0.20-namenode-svc" :
    name => "hadoop-0.20-namenode",
    ensure => true,
    enable => true,
    hasstatus => true
  }
  file { ["/var/hadoop","/var/hadoop/dfs", "/var/hadoop/dfs/name"]:
    ensure => directory,
    owner  => 'hdfs'
  }
}

class hadoop::jobtracker {
  require hadoop::base    
  package { "hadoop-0.20-jobtracker":
    ensure => "latest",
  }

  service { "hadoop-0.20-jobtracker-svc" :
    name => "hadoop-0.20-jobtracker",
    ensure => true,
    enable => true,
    hasstatus => true
  }
}

class hadoop::base {
  require hadoop::package
  File {  
    owner => root,
    group => root,
    mode  => 755,
  }

  # XXX: I think this breaks the symlink to the directory in /etc
  file { "/usr/lib/hadoop-0.20/conf/":
    ensure  => directory,
    source  => 'puppet:///modules/hadoop/usr/lib/hadoop-0.20/conf/',
    recurse => true,
    # XXX: We still get .svn but at least we don't get the contents.
    recurselimit => 1,
  }
  file { "hdfs-site":
    path    => "/usr/lib/hadoop-0.20/conf/hdfs-site.xml",
    ensure  => file,
    content => template("hadoop/hdfs-site.xml.erb"),
  }
  file { "mapred-site":
    path    => "/usr/lib/hadoop-0.20/conf/mapred-site.xml",
    ensure  => file,
    content => template("hadoop/mapred-site.xml.erb"),
  }
  file { "core-site":
    path    => "/usr/lib/hadoop-0.20/conf/core-site.xml",
    ensure  => file,
    content => template("hadoop/core-site.xml.erb"),
  }
}

class hadoop::package {
  require hadoop::yum,java
  package { "hadoop-0.20":
    ensure => "latest",
  }
}

class hadoop::yum {
  file { "/etc/yum.repos.d/cloudera-cdh3.repo":
    owner  => "root", 
    group  => "root",
    mode   => 0644, 
    source => "puppet:///modules/hadoop/etc/yum.repos.d/cloudera-cdh3.repo", 
  }
}

