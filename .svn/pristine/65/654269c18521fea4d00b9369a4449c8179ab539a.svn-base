# $Id$

class straycat::os::linux {
	# The classes below simply breakup the pre stage slightly and help
	# us to try and logically group and order things.
	class {
		"straycat::os::linux::pre": stage => setup;
		"straycat::os::linux::userinfo": stage => setup;
		"straycat::os::linux::authnz": stage => setup;
		"straycat::os::linux::management": stage => setup;
		"straycat::os::linux::services": stage => setup;
		"straycat::sec": stage => setup
	}

	Class['straycat::os::linux::pre'] ->
	Class['straycat::os::linux::userinfo'] ->
	Class['straycat::os::linux::authnz'] ->
	Class['straycat::os::linux::management'] ->
	Class['straycat::os::linux::services'] ->
	Class['straycat::sec']

}

# The basics of what's needed to get started.
class straycat::os::linux::pre {
	tag("bootstrap")
	class { "straycat::os::linux::opt" :
		prefix => $straycat::params::opt_prefix
	}
	include straycat::os::linux::scripts
	include straycat::os::linux::dhclient
	include straycat::pki
	class { "ntp::client" :
		ntp_server => $straycat::params::ntp_server
	}
}

# Ability to get user info
class straycat::os::linux::userinfo {
	tag("bootstrap")
	class { 'ldap':
		ldap => $straycat::params::ldap,
		ldap_base => $straycat::params::ldap_base,
		ca_cert => $straycat::params::pki_straycatca
	}
	include straycat::os::linux::nss
}

# athentication and authorization.
class straycat::os::linux::authnz {
	class { "krb5::client" :
		realm => $straycat::params::krb5realm,
		domain => $straycat::params::dns_domain,
		kdc_list => $straycat::params::kdc_list,
		kadminsrv => $straycat::params::kadminsrv

	}
#	include samba::client
	include sudo
}

class straycat::os::linux::management {
	class { 'puppet::client' :
		host => $straycat::params::puppethost,
		port => $straycat::params::puppetport
	}
	class {'snmp::snmpd':
		mon_host => $straycat::params::mon_host,
		snmp_ro_comm => $straycat::params::snmp_ro_comm
	}
	include nagios::client
	
	if $::operatingsystem == 'centos' {
		if $::operatingsystemrelease >= 6 {
			class {'spacewalk::client':
				host => $straycat::params::spacewalk_host,
				keys => $straycat::params::spacewalk_centos_6_x86_64
			}
		} elsif $::operatingsystemrelease >= 5 {
			class {'spacewalk::client':
				host => $straycat::params::spacewalk_host,
				keys => $straycat::params::spacewalk_centos_5_x86_64
			}
		}
	}
}

class straycat::os::linux::services {
	include ssh::client
	ssh::client::config_value {'GSSAPIAuthentication': value => 'yes'}
	# Make sure GSSAPIDelegateCredentials is in the config file.
	exec { "GSSAPIDelegateCredentials_add" :
		command => "sed -i \'s,\\(GSSAPIAuthentication.*\\),\\1\\n\\tGSSAPIDelegateCredentials yes,' $ssh::params::ssh_config",
		unless => "sed -n '/^Host \\*/,\$p' $ssh::params::ssh_config | grep 'GSSAPIDelegateCredentials'",
		require => File["$ssh::params::ssh_config"]

	}
	ssh::client::config_value {'GSSAPIDelegateCredentials':
		value => 'yes',
		require => Exec['GSSAPIDelegateCredentials_add']
	}
	
	include ssh::server
	include straycat::sec::sshkeys
	ssh::server::config_value {'PermitRootLogin': value => 'without-password'}
	ssh::server::config_value {'GSSAPIAuthentication': value => 'yes'}
	ssh::server::config_value {'GSSAPICleanupCredentials': value => 'yes'}
	
	include straycat::os::linux::mta
}
